# Called from code once a year for "playable" (count+) characters.
# Root is the character
yearly_playable_pulse = {
	on_actions = {
		delay = { days = { 8 288 } }
		accou_yearly_playable_pulse
	}
}

accou_yearly_playable_pulse = {
	trigger = {
		trigger_if = {
			limit = { is_ai = no }
			has_game_rule = accou_event_frequency_player_1y
		}
		trigger_else = {
			has_game_rule = accou_event_frequency_ai_3y
			highest_held_title_tier >= tier_duchy
		}
		basic_is_valid_for_yearly_events_trigger = yes
	}

	events = {
		accou_marriage.0001 # Courtier Requests to Marry
	}
}

# Called from code once every three years for "playable" (count+) characters.
# Root is the character
three_year_playable_pulse = {
	on_actions = {
		delay = { days = { 8 288 } }
		accou_three_year_playable_pulse
	}
}

accou_three_year_playable_pulse = {
	trigger = {
		trigger_if = {
			limit = { is_ai = no }
			has_game_rule = accou_event_frequency_player_3y
		}
		trigger_else = {
			OR = {
				AND = {
					has_game_rule = accou_event_frequency_ai_3y
					highest_held_title_tier < tier_duchy
				}
				AND = {
					has_game_rule = accou_event_frequency_ai_5y
					highest_held_title_tier >= tier_duchy
				}
			}
		}
		basic_is_valid_for_yearly_events_trigger = yes
	}

	events = {
		accou_marriage.0001 # Courtier Requests to Marry
	}
}

# Called from code once every five years for "playable" (count+) characters.
# Root is the character
five_year_playable_pulse = {
	on_actions = {
		delay = { days = { 8 288 } }
		accou_five_year_playable_pulse
	}
}

accou_five_year_playable_pulse = {
	trigger = {
		trigger_if = {
			limit = { is_ai = no }
			has_game_rule = accou_event_frequency_player_5y
		}
		trigger_else = {
			has_game_rule = accou_event_frequency_ai_5y
			highest_held_title_tier < tier_duchy
		}
		basic_is_valid_for_yearly_events_trigger = yes
	}

	events = {
		accou_marriage.0001 # Courtier Requests to Marry
	}
}

# Called every Jan 1st
# Root does not exist
yearly_global_pulse = {
	on_actions = { accou_yearly_global_pulse }
}

accou_yearly_global_pulse = {
	trigger = { debug_only = yes }

	effect = {
		accou_debug_log_effect = { MSG = accou_debug_msg_stats_all }
		accou_debug_log_effect = { MSG = accou_debug_msg_stats_counts }
		accou_debug_log_effect = { MSG = accou_debug_msg_stats_dukes }
		accou_debug_log_effect = { MSG = accou_debug_msg_stats_kings }
	}
}